//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Msgs
{
    [Serializable]
    public class MoveGroupResult : Message
    {
        public const string k_RosMessageName = "msgs/MoveGroup";
        public override string RosMessageName => k_RosMessageName;

        //  An error code reflecting what went wrong
        public MoveItErrorCodesMsg error_code;
        //  The full starting state of the robot at the start of the trajectory
        public Moveit.RobotStateMsg trajectory_start;
        //  The trajectory that moved group produced for execution
        public Moveit.RobotTrajectoryMsg planned_trajectory;
        //  The trace of the trajectory recorded during execution
        public Moveit.RobotTrajectoryMsg executed_trajectory;
        //  The amount of time it took to complete the motion plan
        public double planning_time;

        public MoveGroupResult()
        {
            this.error_code = new MoveItErrorCodesMsg();
            this.trajectory_start = new Moveit.RobotStateMsg();
            this.planned_trajectory = new Moveit.RobotTrajectoryMsg();
            this.executed_trajectory = new Moveit.RobotTrajectoryMsg();
            this.planning_time = 0.0;
        }

        public MoveGroupResult(MoveItErrorCodesMsg error_code, Moveit.RobotStateMsg trajectory_start, Moveit.RobotTrajectoryMsg planned_trajectory, Moveit.RobotTrajectoryMsg executed_trajectory, double planning_time)
        {
            this.error_code = error_code;
            this.trajectory_start = trajectory_start;
            this.planned_trajectory = planned_trajectory;
            this.executed_trajectory = executed_trajectory;
            this.planning_time = planning_time;
        }

        public static MoveGroupResult Deserialize(MessageDeserializer deserializer) => new MoveGroupResult(deserializer);

        private MoveGroupResult(MessageDeserializer deserializer)
        {
            this.error_code = MoveItErrorCodesMsg.Deserialize(deserializer);
            this.trajectory_start = Moveit.RobotStateMsg.Deserialize(deserializer);
            this.planned_trajectory = Moveit.RobotTrajectoryMsg.Deserialize(deserializer);
            this.executed_trajectory = Moveit.RobotTrajectoryMsg.Deserialize(deserializer);
            deserializer.Read(out this.planning_time);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.error_code);
            serializer.Write(this.trajectory_start);
            serializer.Write(this.planned_trajectory);
            serializer.Write(this.executed_trajectory);
            serializer.Write(this.planning_time);
        }

        public override string ToString()
        {
            return "MoveGroupResult: " +
            "\nerror_code: " + error_code.ToString() +
            "\ntrajectory_start: " + trajectory_start.ToString() +
            "\nplanned_trajectory: " + planned_trajectory.ToString() +
            "\nexecuted_trajectory: " + executed_trajectory.ToString() +
            "\nplanning_time: " + planning_time.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Result);
        }
    }
}
